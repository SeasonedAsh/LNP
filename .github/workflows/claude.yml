name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]
  # Optional manual run
  workflow_dispatch:

concurrency:
  group: claude-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude'))) ||
      (github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      # --------------------------
      # Auth OPTION A: Direct Claude API (simplest)
      # Requires repo secret: ANTHROPIC_API_KEY
      # --------------------------
      - name: Run Claude Code (Claude API)
        if: ${{ secrets.ANTHROPIC_API_KEY != '' }}
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          # Let comments with @claude drive behavior; add claude_args guardrails:
          claude_args: >-
            --max-turns 7
            --model claude-sonnet-4-20250514
            --allowed-tools Editor,Bash,Git
          # Optional: a default prompt to run when triggered without extra text
          # prompt: 'Follow CLAUDE.md and project hooks. Apply routing: safety → tests → observability → k8s (if manifests changed).'

      # --------------------------
      # Auth OPTION B: AWS Bedrock
      # Requires repo secret: AWS_ROLE_TO_ASSUME (OIDC), and a GitHub App for write tokens
      # --------------------------
      - name: Generate GitHub App token
        if: ${{ secrets.AWS_ROLE_TO_ASSUME != '' && secrets.APP_ID != '' && secrets.APP_PRIVATE_KEY != '' }}
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Configure AWS Credentials (OIDC)
        if: ${{ secrets.AWS_ROLE_TO_ASSUME != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-west-2

      - name: Run Claude Code (Bedrock)
        if: ${{ secrets.AWS_ROLE_TO_ASSUME != '' }}
        uses: anthropics/claude-code-action@v1
        with:
          github_token: ${{ steps.app-token.outputs.token }}
          use_bedrock: "true"
          claude_args: >-
            --model us.anthropic.claude-sonnet-4-20250514-v1:0
            --max-turns 7
            --allowed-tools Editor,Bash,Git

      # --------------------------
      # Auth OPTION C: Google Vertex AI
      # Requires repo secrets: GCP_WORKLOAD_IDENTITY_PROVIDER, GCP_SERVICE_ACCOUNT, APP_ID, APP_PRIVATE_KEY
      # --------------------------
      - name: Authenticate to Google Cloud
        if: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER != '' && secrets.GCP_SERVICE_ACCOUNT != '' }}
        id: gcp-auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Generate GitHub App token (Vertex)
        if: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER != '' && secrets.GCP_SERVICE_ACCOUNT != '' && secrets.APP_ID != '' && secrets.APP_PRIVATE_KEY != '' }}
        id: app-token-vertex
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Run Claude Code (Vertex)
        if: ${{ steps.gcp-auth.outcome == 'success' }}
        uses: anthropics/claude-code-action@v1
        with:
          github_token: ${{ steps.app-token-vertex.outputs.token }}
          use_vertex: "true"
          claude_args: >-
            --model claude-sonnet-4@20250514
            --max-turns 7
            --allowed-tools Editor,Bash,Git
        env:
          ANTHROPIC_VERTEX_PROJECT_ID: ${{ steps.gcp-auth.outputs.project_id }}
          CLOUD_ML_REGION: us-east5
